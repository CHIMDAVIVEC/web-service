{"version":3,"sources":["context/auth/authActionTypes.js","context/auth/authReducer.js","context/apiUtils.js","context/auth/authContext.js","context/bot/botActionTypes.js","context/bot/botReducer.js","context/bot/botContext.js","context/user/userActionTypes.js","context/user/userReducer.js","context/user/userContext.js","context/checkAuth.js","components/Home.js","components/styles/FooterStyled.js","components/Footer.js","components/HOC.js","components/List/Table.js","components/styles/LoaderStyled.js","components/Loader/Loader.js","components/List/List.js","components/styles/BotFormStyled.js","components/AddNew/AddNewForm.js","components/AddNew/AddNew.js","components/auth/Login.js","routes.js","App.js","reportWebVitals.js","index.js"],"names":["AUTH_START","AUTH_SUCCESS","AUTH_FAILURE","AUTH_RESET","state","action","type","types","error","loading","token","payload","errResponse","user","ClientAPI","axios","create","baseURL","interceptors","request","use","config","console","log","localStorage","getItem","headers","Authorization","initialAuthState","AuthContext","createContext","AuthProvider","children","useReducer","userReducer","dispatch","LoginAction","useCallback","data","a","post","res","setItem","access_token","response","error_msg","Provider","value","AuthReset","BOT_START","BOT_SUCCESS","BOT_FAILURE","BOT_RESET","BOT_ADD","message","bot","bots","initialBotState","BotContext","BotProvider","botReducer","fetchBots","id","addBot","BotReset","USER_START","USER_FAILURE","USER_RESET","GET_LOGGED_IN_USER","me","initialUserState","UserContext","UserProvider","fetchLoggedInUser","get","useEffect","UserReset","checkAuth","decode","_id","e","Home","history","useHistory","push","HeaderStyled","styled","div","Footer","Layout","PageFooter","index","FooterStyled","style","height","className","position","bottom","width","defaultSelectedKeys","mode","display","justifyContent","Item","to","danger","onClick","removeItem","HOC","Component","props","useContext","BotMessage","success","minHeight","columns","title","dataIndex","key","sorter","b","Id","sortDirections","defaultSortOrder","name","localeCompare","BotTable","rowKey","dataSource","clear","CustomLoaderStyled","Loader","text","padding","alignItems","flexDirection","LoaderStyled","getBots","BotFormStyled","TextArea","Input","BotForm","onFinish","layout","size","label","rules","required","prefix","FontColorsOutlined","placeholder","autoSize","InfoOutlined","marginTop","htmlType","values","LoginForm","window","location","reload","initialValues","remember","UserOutlined","LockOutlined","LoginIsland","component","rest","render","replace","BaseRoute","basename","exact","path","BotList","AddNewBot","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9be98cd0.chunk.js","sourcesContent":["export const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAILURE = \"AUTH_FAILURE\";\r\nexport const AUTH_RESET = \"AUTH_RESET\";\r\nexport const GET_AUTH = \"GET_AUTH\";\r\n","import * as types from \"./authActionTypes\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case types.AUTH_START:\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: true,\r\n      };\r\n\r\n    case types.AUTH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        token: action.payload,\r\n      };\r\n\r\n    case types.AUTH_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true,\r\n        errResponse: action.payload,\r\n      };\r\n    case types.AUTH_RESET:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: false,\r\n        errResponse: \"\",\r\n        token: null,\r\n        user: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst ClientAPI = axios.create({\r\n  baseURL: \"http://192.168.0.117:8000/api/\",\r\n});\r\n\r\nClientAPI.interceptors.request.use(function (config) {\r\n  console.log(\"Request Sent\");\r\n  const token = localStorage.getItem(\"howard_shores\");\r\n\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n\r\n  return config;\r\n});\r\n\r\nexport default ClientAPI;\r\n","import React, { createContext, useReducer, useCallback } from \"react\";\r\nimport userReducer from \"./authReducer\";\r\nimport * as types from \"./authActionTypes\";\r\nimport ClientAPI from \"../apiUtils\";\r\n\r\nconst initialAuthState = {\r\n  loading: false,\r\n  error: false,\r\n  token: null,\r\n  errResponse: null,\r\n};\r\n\r\nexport const AuthContext = createContext(initialAuthState);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(userReducer, initialAuthState);\r\n\r\n  const AuthReset = () => {\r\n    dispatch({\r\n      type: types.AUTH_RESET,\r\n    });\r\n  };\r\n\r\n  const LoginAction = useCallback(async (data) => {\r\n    dispatch({\r\n      type: types.AUTH_START,\r\n    });\r\n    try {\r\n      const res = await ClientAPI.post(\"/auth/login\", data);\r\n      localStorage.setItem(\"howard_shores\", res.data.access_token);\r\n      dispatch({\r\n        type: types.AUTH_SUCCESS,\r\n        payload: res.data.access_token,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: types.AUTH_FAILURE,\r\n        payload: error.response.data.error_msg,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        state,\r\n        AuthReset,\r\n        LoginAction,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","export const BOT_START = \"BOT_START\";\r\nexport const BOT_SUCCESS = \"BOT_SUCCESS\";\r\nexport const BOT_FAILURE = \"BOT_FAILURE\";\r\nexport const BOT_RESET = \"BOT_RESET\";\r\nexport const BOT_ADD = \"BOT_ADD\";\r\n","import * as types from \"./botActionTypes\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case types.BOT_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null,\r\n        bot: null,\r\n        error: null,\r\n      };\r\n\r\n    case types.BOT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        bots: action.payload,\r\n      };\r\n\r\n    case types.BOT_ADD:\r\n      return {\r\n        ...state,\r\n        bots: [action.payload, ...state.bots],\r\n        loading: false,\r\n        error: false,\r\n        errResponse: \"\",\r\n        message: \"Бот успешно добавлен!\",\r\n      };\r\n\r\n    case types.BOT_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true,\r\n        errResponse: action.payload,\r\n      };\r\n\r\n    case types.BOT_RESET:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: false,\r\n        errResponse: \"\",\r\n        message: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, {\r\n  createContext,\r\n  useReducer,\r\n  useCallback,\r\n} from \"react\";\r\nimport botReducer from \"./botReducer\";\r\nimport * as types from \"./botActionTypes\";\r\nimport ClientAPI from \"../apiUtils\";\r\n\r\nconst initialBotState = {\r\n  loading: false,\r\n  error: false,\r\n  bots: \"\",\r\n  bot: null,\r\n  errResponse: \"\",\r\n  message: null,\r\n};\r\n\r\nexport const BotContext = createContext(initialBotState);\r\n\r\nexport const BotProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(botReducer, initialBotState);\r\n\r\n  const BotReset = () => {\r\n    dispatch({\r\n      type: types.BOT_RESET,\r\n    });\r\n  };\r\n\r\n  const fetchBots = useCallback(async (id) => {\r\n    dispatch({\r\n      type: types.BOT_START,\r\n    });\r\n    try {\r\n      const res = await ClientAPI.post(\"/bot/\", id);\r\n      dispatch({\r\n        type: types.BOT_SUCCESS,\r\n        payload: res.data.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: types.BOT_FAILURE,\r\n        payload: error.response.data.error_msg,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const addBot = useCallback(async (data) => {\r\n    dispatch({\r\n      type: types.BOT_START,\r\n    });\r\n    try {\r\n      const res = await ClientAPI.post(\"/bot/add\", data);\r\n      dispatch({\r\n        type: types.BOT_ADD,\r\n        payload: res.data.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: types.BOT_FAILURE,\r\n        payload: error.response.data.error_msg,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <BotContext.Provider\r\n      value={{\r\n        state,\r\n        addBot,\r\n        BotReset,\r\n        fetchBots,\r\n      }}\r\n    >\r\n      {children}\r\n    </BotContext.Provider>\r\n  );\r\n};\r\n","export const USER_START = 'USER_START';\r\nexport const USER_FAILURE = 'USER_FAILURE';\r\nexport const USER_RESET = 'USER_RESET';\r\nexport const GET_LOGGED_IN_USER = 'GET_LOGGED_IN_USER';\r\n","import * as types from \"./userActionTypes\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case types.USER_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: null,\r\n        user: null,\r\n        error: null,\r\n      };\r\n\r\n    case types.GET_LOGGED_IN_USER:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        me: action.payload,\r\n      };\r\n\r\n    case types.USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true,\r\n        errResponse: action.payload,\r\n      };\r\n\r\n    case types.USER_RESET:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: false,\r\n        errResponse: \"\",\r\n        message: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, {\r\n  createContext,\r\n  useReducer,\r\n  useEffect,\r\n  useCallback,\r\n} from \"react\";\r\nimport userReducer from \"./userReducer\";\r\nimport * as types from \"./userActionTypes\";\r\nimport ClientAPI from \"../apiUtils\";\r\n\r\nconst initialUserState = {\r\n  loading: false,\r\n  error: false,\r\n  user: null,\r\n  me: null,\r\n  errResponse: \"\",\r\n  message: null,\r\n};\r\n\r\nexport const UserContext = createContext(initialUserState);\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(userReducer, initialUserState);\r\n\r\n  const UserReset = () => {\r\n    dispatch({\r\n      type: types.USER_RESET,\r\n    });\r\n  };\r\n\r\n  const fetchLoggedInUser = useCallback(async () => {\r\n    dispatch({\r\n      type: types.USER_START,\r\n    });\r\n    try {\r\n      const res = await ClientAPI.get(\"/user/me\");\r\n      dispatch({\r\n        type: types.GET_LOGGED_IN_USER,\r\n        payload: res.data.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: types.USER_FAILURE,\r\n        payload: error.response.data.error_msg,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchLoggedInUser();\r\n  }, []);\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        state,\r\n        UserReset,\r\n        fetchLoggedInUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n","import decode from \"jwt-decode\";\r\n\r\nconst checkAuth = () => {\r\n  const token = localStorage.getItem(\"howard_shores\");\r\n  if (!token) return false;\r\n\r\n  try {\r\n    const { _id } = decode(token);\r\n    return _id;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default checkAuth;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    history.push(\"/bots\");\r\n  }, []);\r\n  return <>{}</>;\r\n}\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nconst HeaderStyled = styled.div`\r\n  .ant-layout-header {\r\n    box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15) !important;\r\n  }\r\n  .site-layout-background {\r\n    padding: 0;\r\n  }\r\n  .anticon-menu-fold {\r\n    padding: 0 1rem;\r\n    font-size: 1.2rem;\r\n  }\r\n\r\n  .anticon-menu-unfold {\r\n    padding: 1rem;\r\n  }\r\n  .name {\r\n    font-size: 0.8rem;\r\n    padding: 0 0.8rem;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    .name {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default HeaderStyled;\r\n","import React from \"react\";\r\nimport { Layout, Menu, Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FooterStyled from \"./styles/FooterStyled\";\r\n\r\nconst { Footer } = Layout;\r\n\r\nfunction PageFooter({ history, index }) {\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"howard_shores\");\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <FooterStyled>\r\n      <div style={{ height: \"100%\" }}>\r\n        <Footer\r\n          className=\"site-layout-background\"\r\n          style={{\r\n            position: \"fixed\",\r\n            bottom: \"0\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <Menu\r\n            defaultSelectedKeys={[index]}\r\n            mode=\"horizontal\"\r\n            style={{\r\n              position: \"relative\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Menu.Item key=\"1\">\r\n              <Link to=\"/bots\">Боты</Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"2\">\r\n              <Link to=\"/add-new-bot\">Добавить</Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"3\">\r\n              <Button danger onClick={() => handleLogout()}>\r\n                Выйти\r\n              </Button>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Footer>\r\n      </div>\r\n    </FooterStyled>\r\n  );\r\n}\r\n\r\nexport default PageFooter;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { Layout, message } from \"antd\";\r\nimport { BotContext } from \"../context/bot/botContext\";\r\nimport PageFooter from \"./Footer\";\r\n\r\nfunction HOC(Component, index) {\r\n  return function DashboardCustomHoc(props) {\r\n    const { BotReset } = useContext(BotContext);\r\n    const {\r\n      error,\r\n      errResponse,\r\n      message: BotMessage,\r\n    } = useContext(BotContext).state;\r\n\r\n    useEffect(() => {\r\n      if (error) {\r\n        message.error(errResponse);\r\n        BotReset();\r\n      }\r\n    }, [error]);\r\n\r\n    useEffect(() => {\r\n      if (BotMessage) {\r\n        message.success(BotMessage);\r\n        BotReset();\r\n      }\r\n    }, [BotMessage]);\r\n\r\n    return (\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <Layout className=\"site-layout\">\r\n          <div className=\"container\">\r\n            <Component {...props} />\r\n          </div>\r\n          <PageFooter history={props.history} index={index} />\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  };\r\n}\r\n\r\nexport default HOC;\r\n","import React from \"react\";\r\nimport { Table } from \"antd\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"ID\",\r\n    dataIndex: \"Id\",\r\n    key: \"Id\",\r\n    sorter: (a, b) => a.Id - b.Id,\r\n    sortDirections: [\"ascend\", \"descend\"],\r\n    defaultSortOrder: \"ascend\",\r\n  },\r\n  {\r\n    title: \"Название\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n    sorter: (a, b) => a.name.localeCompare(b.name),\r\n    sortDirections: [\"ascend\", \"descend\"],\r\n  },\r\n\r\n  {\r\n    title: \"Статус\",\r\n    dataIndex: \"status\",\r\n    key: \"status\",\r\n  },\r\n];\r\n\r\nfunction BotTable({ data }) {\r\n  return (\r\n    <>\r\n      <Table\r\n        className=\"clearfix\"\r\n        columns={columns}\r\n        rowKey=\"Id\"\r\n        dataSource={data}\r\n        style={{ clear: \"both\" }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BotTable;\r\n","import styled from \"styled-components\";\r\n\r\nconst CustomLoaderStyled = styled.div`\r\n  @keyframes rotate360 {\r\n    from {\r\n      transform: rotate(0deg);\r\n    }\r\n    to {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n  .spinner {\r\n    margin: 16px;\r\n    animation: rotate360 1s linear infinite;\r\n    transform: translateZ(0);\r\n    border-top: 2px solid #1f59bc;\r\n    border-right: 2px solid #1f59bc;\r\n    border-bottom: 2px solid #1f59bc;\r\n    border-left: 4px solid #1f59bb;\r\n    background: transparent;\r\n    width: 80px;\r\n    height: 80px;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nexport default CustomLoaderStyled;\r\n","import React from \"react\";\r\n\r\nimport LoaderStyled from \"../styles/LoaderStyled\";\r\n\r\nconst Loader = ({ text }) => (\r\n  <div\r\n    style={{\r\n      padding: \"24px\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      flexDirection: \"column\",\r\n    }}\r\n  >\r\n    <LoaderStyled>\r\n      <div className=\"spinner\"></div>\r\n    </LoaderStyled>\r\n\r\n    <div> {text ? text : \"Загружаю...\"}.</div>\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { BotContext } from \"../../context/bot/botContext\";\r\nimport { UserContext } from \"../../context/user/userContext\";\r\nimport HOC from \"../HOC\";\r\nimport BotTable from \"./Table\";\r\nimport Loader from \"../Loader/Loader\";\r\n\r\nconst index = \"1\";\r\n\r\nfunction BotList() {\r\n  useEffect(() => {\r\n    async function getBots() {\r\n      await fetchLoggedInUser();\r\n      const id = me ? me._id : 0;\r\n      await fetchBots(id);\r\n    }\r\n    getBots();\r\n  }, []);\r\n\r\n  const { bots, loading } = useContext(BotContext).state;\r\n  const { fetchBots } = useContext(BotContext);\r\n  const { fetchLoggedInUser } = useContext(UserContext);\r\n  const { me } = useContext(UserContext).state;\r\n  return <div>{!loading ? <BotTable data={bots} /> : <Loader />}</div>;\r\n}\r\n\r\nexport default HOC(BotList, index);\r\n","import styled from \"styled-components\";\r\n\r\nconst BotFormStyled = styled.div`\r\n  .dynamic-delete-button {\r\n    position: relative;\r\n    top: 8px;\r\n    margin: 0 8px;\r\n    color: #999;\r\n    font-size: 24px;\r\n    cursor: pointer;\r\n    transition: all 0.3s;\r\n  }\r\n  .dynamic-delete-button:hover {\r\n    color: #777;\r\n  }\r\n  .dynamic-delete-button[disabled] {\r\n    cursor: not-allowed;\r\n    opacity: 0.5;\r\n  }\r\n  [data-theme=\"dark\"] .dynamic-delete-button {\r\n    color: rgba(255, 255, 255, 0.45);\r\n  }\r\n  [data-theme=\"dark\"] .dynamic-delete-button:hover {\r\n    color: rgba(255, 255, 255, 0.65);\r\n  }\r\n`;\r\n\r\nexport default BotFormStyled;\r\n","import React from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { FontColorsOutlined, InfoOutlined } from \"@ant-design/icons\";\r\nimport BotFormStyled from \"../styles/BotFormStyled\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nfunction BotForm({ onFinish }) {\r\n  return (\r\n    <BotFormStyled>\r\n      <Form\r\n        name=\"bot_details_form\"\r\n        className=\"login-form\"\r\n        onFinish={onFinish}\r\n        layout=\"vertical\"\r\n        size=\"large\"\r\n        style={{ clear: \"both\" }}\r\n      >\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Название\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Введите название!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<FontColorsOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Название\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"spec\"\r\n          label=\"Специализация\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Введите специализацию бота!\",\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea\r\n            autoSize\r\n            prefix={<InfoOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Специализация\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <div\r\n          className=\"row justify-content-center align-items-center\"\r\n          style={{ marginTop: \"5%\" }}\r\n        >\r\n          <div className=\"align-self-center text-center\">\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"mr-2\">\r\n                Создать\r\n              </Button>\r\n            </Form.Item>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </BotFormStyled>\r\n  );\r\n}\r\n\r\nexport default BotForm;\r\n","import React, { useContext } from \"react\";\r\nimport { BotContext } from \"../../context/bot/botContext\";\r\nimport { UserContext } from \"../../context/user/userContext\";\r\nimport HOC from \"../HOC\";\r\nimport BotForm from \"./AddNewForm\";\r\n\r\nconst index = \"2\";\r\nfunction AddNewBot(props) {\r\n  const { addBot } = useContext(BotContext);\r\n  const { me } = useContext(UserContext).state;\r\n\r\n  const onFinish = (values) => {\r\n    values.user = me._id;\r\n    addBot(values);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BotForm onFinish={onFinish} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HOC(AddNewBot, index);\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Form, Input, Button, message } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { AuthContext } from \"../../context/auth/authContext\";\r\nimport checkAuth from \"../../context/checkAuth\";\r\n\r\nconst LoginForm = ({ history }) => {\r\n  const { LoginAction, state, AuthReset } = useContext(AuthContext);\r\n  const { token, loading, error, errResponse } = state;\r\n  const onFinish = (values) => {\r\n    LoginAction(values);\r\n  };\r\n\r\n  useEffect(() => {\r\n    AuthReset();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    checkAuth(token);\r\n    if (token) {\r\n      history.push(\"/home\");\r\n      window.location.reload();\r\n    }\r\n  }, [token, history]);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      message.error(errResponse);\r\n    }\r\n  }, [error, errResponse]);\r\n\r\n  return (\r\n    <div className=\"test\">\r\n      <div className=\"container \">\r\n        <div>\r\n          <div className=\"row justify-content-center align-items-center min-vh-100\">\r\n            <div className=\"col-md-4 align-self-center text-center\">\r\n              <h2>Добро пожаловать!</h2>\r\n              <p>Введите свои данные, чтобы продолжить</p>\r\n              <Form\r\n                name=\"normal_login\"\r\n                className=\"login-form\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n                onFinish={onFinish}\r\n                size=\"large\"\r\n              >\r\n                <Form.Item\r\n                  name=\"email\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Введите e-mail!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                    placeholder=\"E-mail\"\r\n                    className=\"rounded-pill\"\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"password\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Введите пароль!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    placeholder=\"Пароль\"\r\n                    className=\"rounded-pill\"\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"login-form-button\"\r\n                    loading={loading}\r\n                  >\r\n                    Войти\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport { Route, Switch, HashRouter } from \"react-router-dom\";\r\nimport checkAuth from \"./context/checkAuth\";\r\n\r\nimport Home from \"./components/Home\";\r\nimport BotList from \"./components/List/List\";\r\nimport AddNewBot from \"./components/AddNew/AddNew\";\r\nimport LoginForm from \"./components/auth/Login\";\r\n\r\nexport const LoginIsland = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      checkAuth() ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        window.location.replace(\"#/login\")\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst BaseRoute = () => (\r\n  <HashRouter basename=\"/\">\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/login\" component={LoginForm} />\r\n\r\n      <LoginIsland exact path=\"/bots\" component={BotList} />\r\n      <LoginIsland exact path=\"/add-new-bot\" component={AddNewBot} />\r\n\r\n      <Route component={Home} />\r\n    </Switch>\r\n  </HashRouter>\r\n);\r\n\r\nexport default BaseRoute;\r\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { AuthProvider } from \"./context/auth/authContext\";\nimport { BotProvider } from \"./context/bot/botContext\";\nimport { UserProvider } from \"./context/user/userContext\";\nimport BaseRoute from \"./routes\";\n\nfunction App() {\n  return (\n    <Router>\n      <UserProvider>\n        <BotProvider>\n          <AuthProvider>\n            <BaseRoute />\n          </AuthProvider>\n        </BotProvider>\n      </UserProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}